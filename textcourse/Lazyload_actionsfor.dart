// ignore_for_file: file_names
/// 1) Сделать цвет аппбара в теме материалапп
/// создаем класс на стл виджете для самого экрана, возвращаем столбец(column), и в нем
/// текст '705 original gifts'
/// отступ в этих детях колонки через SizeBox по вертикали
/// по горизонтали 0 обернул текст в паддинг и задал edgeinsets.simmetr horizontal
/// далее класс форм ввода на стф виджете
///меняет вид текстфилд через декоратор - рамки и отступы через паддинг
///
///создаёт методы в стэйте и пускает их на кнопки
///дальше создает переменные с текст эдитин контроллер
///после методов запихнуть сетстейт для перерисовки
///
///чтобы в виджет вынесенный отдельно быстро создать конструктор с параметрами - 
///- добавляем эти парам через final вначале, потом щелкаем ctrl+. по имени этих
///параметров и выбираем сгенер конструктор
///
///когда надо что-то переносить из одного окна во второй не переключаясь просто
///выбрать в верхних пунктах меню split right
///
///обернул виджет в стэк и добавил текстфилд с инпутдекорэйшн 
///создать переменную с текст эдитин контроллер и добавить его в текстфилд
///виджет должен быть стэйтфул
///далее нужно добавить слушателя на эту переменную в инитстэйт
///
///!В билде должна быть только верстка, так как вызывается каждый раз при перестроении
///Для примера выше слушателя туда добавлять Нельзя!
///
///сделать кнопку так *место для определения нажатия на кнопку через Gesture Detector ? (тогда)
///закрашенная нажатая кнопка и вывод нужной группы виджетов
///в категориях : (иначе) отображение ничего не закрашенной кнопки и всё.
///
///При наследовании(extends) классов мы можем передавать от родительского класса
///(только одного в отличие от других ниже) переменные и методы вместе с реализацией. 
///А наследник обязан их реализовывать, либо переопределить(@override). Обратиться к 
///родителю через super или дополнить своими методами.
///
///При реализации (implements) из класса берется только наличие чего либо - свойства, 
///метода. При этом у метода может быть реализация, он ее отбросит и оставит только
///наличие. То есть берет у класса его интерфейс(использует класс как интерфейс), наличие свойств и методов.
///Имплементс это не наследование, а требование реализовать все то же самое что есть у
///реализуемого класса.
///
///Абстрактные классы - классы, у которых тебе не нужны его объекты(в абстрактных
///классах и не позволит создать экземпляр этого класса) а нужны только свойства и методы.
///Еще плюс абстрактного класса - может не иметь реализации у своих свойств.
///
///mixin - в отличие от интерфейсов у implements позволяют подмешать именно реализацию
///этих классов(можно больше одного в отличие от extends). 
///
///extension(extension НовоеИмяКласса on ИмяКлассаКотороеМеняем{}) позволяет дописать
///что-то к классу, к которому у нас нет доступа - новые методы в переменные int,
///double, String и тд. При этом есть ограничение, что можно дописывать только функционал.
///Хранить значение переменных и тп, он не может, только геттеры, сеттер и те же
///методы. На практике считается моветон(расширение чужих классов)